import type { CylinderProps } from "@react-three/cannon";
import { useCompoundBody } from "@react-three/cannon";
import { forwardRef } from "react";
import type { Group } from "three";

// Initially Auto-generated by: https://github.com/pmndrs/gltfjsx

type WheelProps = CylinderProps & {
  leftSide?: boolean;
  radius: number;
  chassisDimensions: number[];
};

export const Wheel2 = forwardRef<Group, WheelProps>(
  ({ leftSide, radius, chassisDimensions, ...props }, ref) => {
    const [width] = chassisDimensions;

    const widthW = 0.2 * width;

    useCompoundBody(
      () => ({
        collisionFilterGroup: 0,
        mass: 1,
        material: "wheel",
        shapes: [
          {
            args: [radius, radius, widthW, 16],
            rotation: [0, 0, -Math.PI / 2],
            type: "Cylinder",
          },
        ],
        type: "Kinematic",
        ...props,
      }),
      ref
    );

    return (
      <group ref={ref}>
        <group rotation={[0, 0, ((leftSide ? 1 : -1) * Math.PI) / 2]}>
          {/* Llanta de goma */}
          <mesh rotation={[-Math.PI / 2, 0, 0]}>
            <torusGeometry args={[radius * 0.65, radius * 0.2, 32, 32]} />
            <meshStandardMaterial color="black" />
          </mesh>

          {/* Rin */}
          <mesh rotation={[-Math.PI / 2, 0, 0]}>
            <torusGeometry args={[radius * 0.5, radius * 0.1, 32, 32]} />
            <meshStandardMaterial color="gray" />
          </mesh>

          {/* Detalles en forma de estrella */}
          <group rotation={[-Math.PI / 2, 0, 0]}>
            {Array.from({ length: 6 }).map((_, i) => (
              <mesh
                key={i}
                position={[0, 0, 0]}
                rotation={[0, 0, (i * 2 * Math.PI) / 12]}
              >
                <cylinderGeometry
                  args={[radius * 0.05, radius * 0.05, radius * 0.8, 8]}
                />
                <meshStandardMaterial color="silver" />
              </mesh>
            ))}
          </group>
        </group>
      </group>
    );
  }
);

Wheel2.displayName = "Wheel2"; // Agregar un display name
